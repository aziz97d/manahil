@model IEnumerable<manahil.Models.City>

@{
    ViewData["TitleHeader"] = "Cities";
    Layout = "~/Views/Shared/_AdLayout.cshtml";
}
<style>
    .cards tbody tr {
        float: left;
        width: 19rem;
        margin: 0.5rem;
        border: 0.0625rem solid rgba(0, 0, 0, .125);
        border-radius: .25rem;
        box-shadow: 0.25rem 0.25rem 0.5rem rgba(0, 0, 0, 0.25);
    }

    .cards tbody td {
        display: block;
    }

    .cards thead {
        display: none;
    }

    .cards td:before {
        content: attr(data-label);
        position: relative;
        float: left;
        color: #808080;
        min-width: 4rem;
        margin-left: 0;
        margin-right: 1rem;
        text-align: left;
    }

    tr.selected td:before {
        color: #CCC;
    }

    .table .avatar {
        width: 50px;
    }

    .cards .avatar {
        width: 150px;
        margin: 15px;
    }
</style>

    <a asp-action="Create" class="btn btn-success">Create New</a>
</p>
<form class="card p-2 table-responsive">
    <table id="tbllist" class="table cards table-striped table-bordered table-sm  table-hover" cellspacing="0" width="100%">
        <thead class="text-nowrap">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Country)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
          
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Country.Name)
                    </td>
                    <td class="text-nowrap">
                        <span data-toggle="tooltip" title="Edit!">
                            @Html.ActionLink(" ", "Edit", new { id = item.CityId }, new { @class = "fas fa-edit btn btn-warning btn-xs"})
                        </span>
                        <span data-toggle="tooltip" title="Delete!">
                            @Html.ActionLink(" ", "Delete", new { Id = item.CityId }, new { @class = "far fa-trash-alt btn btn-danger btn-xs" })
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</form>

@section Scripts{
    <script>
        $(document).ready(function () {

            var table = $('#tbllist').DataTable({
                'dom':
                    "<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'<'float-md-right ml-2'B>f>>" +
                    "<'row'<'col-sm-12'tr>>" +
                    "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
                //'ajax': 'https://gyrocode.github.io/files/jquery-datatables/objects.json',
                'buttons': ['csv', {
                    'text': '<i class="fa fa-id-badge fa-fw" aria-hidden="true"></i>',
                    'action': function (e, dt, node) {

                        $(dt.table().node()).toggleClass('cards');
                        $('.fa', node).toggleClass(['fa-table', 'fa-id-badge']);

                        dt.draw('page');
                    },
                    'className': 'btn-sm',
                    'attr': {
                        'title': 'Change views',
                    }
                }],
                'select': 'single',
                //'columns': [
                //    {
                //        'orderable': false,
                //        'data': null,
                //        'className': 'text-center',
                //        'render': function (data, type, full, meta) {
                //            if (type === 'display') {
                //                data = '<i class="fa fa-user fa-fw"></i>';
                //                data = '<img src="https://api.adorable.io/avatars/150/' + encodeURIComponent(full['name']) + '.png" class="avatar border rounded-circle">';
                //            }

                //            return data;
                //        }
                //    },
                //    {
                //        'data': 'name'
                //    },
                //    {
                //        'data': 'position'
                //    },
                //    {
                //        'data': 'salary',
                //        'class': 'text-right'
                //    },
                //    {
                //        'data': 'start_date',
                //        'class': 'text-right'
                //    },
                //    {
                //        'data': 'office'
                //    },
                //    {
                //        'data': 'extn'
                //    }
                //],
                'drawCallback': function (settings) {
                    var api = this.api();
                    var $table = $(api.table().node());
                    console.log($table);
                    if ($table.hasClass('cards')) {

                        // Create an array of labels containing all table headers
                        var labels = [];
                        $('thead th', $table).each(function () {
                            labels.push($(this).text());
                        });

                        // Add data-label attribute to each cell
                        $('tbody tr', $table).each(function () {
                            $(this).find('td').each(function (column) {
                                $(this).attr('data-label', labels[column]);
                            });
                        });

                        var max = 0;
                        $('tbody tr', $table).each(function () {
                            max = Math.max($(this).height(), max);
                        }).height(max);

                    } else {
                        // Remove data-label attribute from each cell
                        $('tbody td', $table).each(function () {
                            $(this).removeAttr('data-label');
                        });

                        $('tbody tr', $table).each(function () {
                            $(this).height('auto');
                        });
                    }
                }
            })
                .on('select', function (e, dt, type, indexes) {
                    var rowData = table.rows(indexes).data().toArray()
                    $('#row-data').html(JSON.stringify(rowData));
                })
                .on('deselect', function () {
                    $('#row-data').empty();
                })
        });
    </script>

    @*<script>
        $(document).ready(function () {
            $('#tbllist').DataTable({
                dom: '<"dom_wrapper fh-fixedHeader"flB>tip',
                //"sDom": "<'row'<'col-sm-12'<'form-group'<f>>>>tr<'row'<'col-sm-12'<'pull-left'i><'pull-right'p><'clearfix'>>>",
                //buttons: [
                //    'copy', 'csv', 'excel', 'pdf'
                //],
                buttons: {
                    dom: {
                        button: {
                            className: 'btn rounded-0'
                        }
                    },
                    buttons: [
                        //'copy', 'csv', 'excel', 'pdf'
                        //$(this).addClass("btn-group dt-buttons justify-content-center mb-3")
                        {
                            extend: 'colvis',
                            "columns": ':not(:last-child)',
                            text: '<i class="mdi mdi-view-column"></i>',
                            className: 'btn-info',
                            titleAttr: 'Show / hide columns',
                            //collectionLayout: 'fixed two-column'

                        },
                        {
                            extend: 'copy',
                            text: '<i class="mdi mdi-content-copy"></i>',
                            className: 'btn-primary',
                            titleAttr: 'Copy to Clipboard'
                        },
                        {
                            extend: 'csv',
                            text: '<i class="mdi mdi-note-outline"></i>',
                            className: 'btn-secondary',
                            titleAttr: 'Export to csv'

                        },
                        {
                            extend: 'excel',
                            text: '<i class="mdi mdi-file-excel"></i>',
                            className: 'btn-success',
                            titleAttr: 'Export to excel'
                        },
                        {
                            extend: 'pdfHtml5',
                            orientation: 'landscape',
                            pageSize: 'LEGAL',
                            text: '<i class="mdi mdi-file-pdf"></i>',
                            className: 'btn-danger',
                            titleAttr: 'Export to PDF',
                            //exportOptions: {
                            //    columns: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                            //}

                        },
                        {
                            extend: 'print',
                            text: '<i class="mdi mdi-printer"></i>',
                            className: 'btn-info',
                            titleAttr: 'Print Table'
                        }

                    ]
                },
                //"columnDefs": [
                // Hide second, third and fourth columns
                //{ "visible": false, "targets": [3, 4, 7, 9, 10] }
                //],
                "searching": true,
                "paging": false,
                "ordering": true,
                "info": true,
                "iDisplayLength": 15,
                "lengthMenu": [[5, 10, 20, 50, -1], [5, 10, 20, 50, "All"]],
                "scrollX": true,
                "scrollY": "60vh",
                "scrollCollapse": true,
                language: {
                    sLengthMenu: "_MENU_"
                }
                //fixedColumns: {
                //    leftColumns: 1,
                //    rightColumns: 1
                //}

                //"sScrollXInner": "100%",
                //dom: 'Blfrtip',
                ////,"fixedHeader": true
            });
        });

                        //$(".search_input").addClass('form-control input-lg col-xs-12');

    </script>*@


}
